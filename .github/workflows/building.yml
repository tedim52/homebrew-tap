name: Build and Upload Homebrew Bottles

on:
  push:

env:
  KURTOSIS_CLI_FORMULA: tedim52/tap/kurtosis-cli

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Attempt to get version from latest commit message
        uses: AsasInnab/regex-action@v1
        id: get-version
        with:
          regex_pattern: '^([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+[0-9A-Za-z-]+)?$'
          regex_flags: 'gim'
          search_string: ${{ github.event.head_commit.message }}

      - name: Check if version was parsed from commit message and fail loudly if not
        if: ${{ steps.get-version.outputs.first_match == '' }}
        # This action allows using Github API directly, so we can use the core libraries fail function to fail loudly
        # https://timheuer.com/blog/manually-force-a-failure-in-github-action-step/
        uses: actions/github-script@v3
        with: 
          script: |
            core.setFailed('Unable to parse semantic version from latest tap commit message.')

      - name: Create a new release 
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get-version.outputs.first_match }}
          release_name: Release ${{ steps.get-version.outputs.first_match }}
          draft: false
          prerelease: false

  build_and_upload:
    needs: release
    strategy:
      fail-fast: false
      matrix:
        include: 
          - os: ubuntu-latest
          - os: macos-10.15
          - os: macos-11
          - os: macos-12
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Build bottle for specific os/arch
        run: |
          brew install --build-bottle ${{ env.KURTOSIS_CLI_FORMULA }}
          brew bottle ${{ env.KURTOSIS_CLI_FORMULA }}
          echo "BOTTLE_FILEPATH=$(find . -name "*.tar.gz" -type f)" >> $GITHUB_ENV
          echo "BOTTLE_FILENAME=$(echo "$BOTTLE_FILEPATH" | sed 's#.*/##')" >> $GITHUB_ENV

      - name: Upload bottle as release asset for latest release
        uses: actions/upload-release-asset@v1
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with: 
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ${{ env.BOTTLE_FILEPATH }}
          asset_name: ${{ env.BOTTLE_FILEPATH }} # need to change to env.BOTTLE_FILENAME when I figure out how to get that working
          asset_content_type: application/gzip
